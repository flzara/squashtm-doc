{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome You'll find detailed documentation about Squash TM, whether you're an end-user, an administrator of a developer. Sections Installation Guide Administrator Guide User Guide Developer Guide FAQ","title":"Home"},{"location":"#welcome","text":"You'll find detailed documentation about Squash TM, whether you're an end-user, an administrator of a developer.","title":"Welcome"},{"location":"#sections","text":"Installation Guide Administrator Guide User Guide Developer Guide FAQ","title":"Sections"},{"location":"administration/","text":"Administration Guide This section is about This section is about the Administration workspace of Squash TM.","title":"Administration Guide"},{"location":"administration/#administration-guide","text":"This section is about This section is about the Administration workspace of Squash TM.","title":"Administration Guide"},{"location":"administration/administration-page/","text":"Administration page To reach the administrator's interface, click on the [Administration] link, in the menu of Squash TM's home page (More details here). Administration page overview The administration interface opens up. This page gives access to the following areas: Users Projects Milestones Custom Fields Information lists Requirement link types Bugtrackers Automation servers Source code management servers Change Login page message Change Home page message System Parameters Download log file It also displays: A navigation bar on the left of the screen for access to the application workspaces (as detailed here). A menu bar with the following options : viewing an account, accessing the administration workspace, setting the global filter and logging out of the application (as detailed here). A statistics area which displays the current application version, the number of projects and users created in the application and the total number of items created (requirement, test case, campaign, iteration, execution).","title":"Administration page"},{"location":"administration/administration-page/#administration-page","text":"To reach the administrator's interface, click on the [Administration] link, in the menu of Squash TM's home page (More details here).","title":"Administration page"},{"location":"administration/administration-page/#administration-page-overview","text":"The administration interface opens up. This page gives access to the following areas: Users Projects Milestones Custom Fields Information lists Requirement link types Bugtrackers Automation servers Source code management servers Change Login page message Change Home page message System Parameters Download log file It also displays: A navigation bar on the left of the screen for access to the application workspaces (as detailed here). A menu bar with the following options : viewing an account, accessing the administration workspace, setting the global filter and logging out of the application (as detailed here). A statistics area which displays the current application version, the number of projects and users created in the application and the total number of items created (requirement, test case, campaign, iteration, execution).","title":"Administration page overview"},{"location":"developer/","text":"Developer's Guide This section gives information to developers.","title":"Developer's Guide"},{"location":"developer/#developers-guide","text":"This section gives information to developers.","title":"Developer's Guide"},{"location":"developer/css-guidelines/","text":"CSS Guidelines Avoid inlined styles For performance (and DRY) reasons, avoid inlined styles. There already are some classes you can use. Otherwise, create specific ones. CSS Minification Stylesheets are processed using the wro4j maven plugin. Wro4j generates a squash.core.css and a couple of squash. .css, which contain the concatenated, minified css classes. When creating a page template, you simply need to import both the squash.core.css and the appropriate squash. .css stylesheets. If you need to add a new color pattern to Squash TM, you should define a \"group\" in src/main/webapp/WEB-INF/wro.xml which references the new color of the pattern files. Simply copy/paste an existing group and change the names. You should also make the wro4j maven plug-in process this new group by adding it to tm.web's pom.xml (see below). <plugin> <groupId>ro.isdc.wro4j</groupId> <artifactId>wro4j-maven-plugin</artifactId> <version>${wro4j.version}</version> <executions> <execution> <id>wro</id> ... <configuration> <targetGroups>squash.core,squash.blue,...,squash.newgroup</targetGroups> ... </configuration> ... Note: The element needs to be written on a single line with no spaces around the commas, otherwise it will not be parsed correctly.","title":"CSS Guidelines"},{"location":"developer/css-guidelines/#css-guidelines","text":"","title":"CSS Guidelines"},{"location":"developer/css-guidelines/#avoid-inlined-styles","text":"For performance (and DRY) reasons, avoid inlined styles. There already are some classes you can use. Otherwise, create specific ones.","title":"Avoid inlined styles"},{"location":"developer/css-guidelines/#css-minification","text":"Stylesheets are processed using the wro4j maven plugin. Wro4j generates a squash.core.css and a couple of squash. .css, which contain the concatenated, minified css classes. When creating a page template, you simply need to import both the squash.core.css and the appropriate squash. .css stylesheets. If you need to add a new color pattern to Squash TM, you should define a \"group\" in src/main/webapp/WEB-INF/wro.xml which references the new color of the pattern files. Simply copy/paste an existing group and change the names. You should also make the wro4j maven plug-in process this new group by adding it to tm.web's pom.xml (see below). <plugin> <groupId>ro.isdc.wro4j</groupId> <artifactId>wro4j-maven-plugin</artifactId> <version>${wro4j.version}</version> <executions> <execution> <id>wro</id> ... <configuration> <targetGroups>squash.core,squash.blue,...,squash.newgroup</targetGroups> ... </configuration> ... Note: The element needs to be written on a single line with no spaces around the commas, otherwise it will not be parsed correctly.","title":"CSS Minification"},{"location":"developer/how-to-contribute/","text":"How to contribute ? We would be very happy to receive third party contributions. To contribute effectively to the project, here are the contribution terms and conditions : The feature must respect the Squash philosophy and must bear an added value for the whole community. The developed code must respect the Squash TM standards, on its architecture and code quality. This condition ensures that we will be able to maintain the code of third party contributions. The code copyright must be transfered The license of the tools and components used to develop the contribution must fit the Squash TM license. In case you want to contribute, you may contact us on the forum : Contributors section","title":"How to contribute ?"},{"location":"developer/how-to-contribute/#how-to-contribute","text":"We would be very happy to receive third party contributions. To contribute effectively to the project, here are the contribution terms and conditions : The feature must respect the Squash philosophy and must bear an added value for the whole community. The developed code must respect the Squash TM standards, on its architecture and code quality. This condition ensures that we will be able to maintain the code of third party contributions. The code copyright must be transfered The license of the tools and components used to develop the contribution must fit the Squash TM license. In case you want to contribute, you may contact us on the forum : Contributors section","title":"How to contribute ?"},{"location":"developer/useful-css-classes/","text":"Useful CSS Classes Name Effect .not-visible Element is not shown .snap-right Element is aligned on the right side of the container .snap-left Element is aligned on the left side of the container .unsnap Resets alignment after a \"snapped\" element","title":"Useful CSS Classes"},{"location":"developer/useful-css-classes/#useful-css-classes","text":"Name Effect .not-visible Element is not shown .snap-right Element is aligned on the right side of the container .snap-left Element is aligned on the left side of the container .unsnap Resets alignment after a \"snapped\" element","title":"Useful CSS Classes"},{"location":"faq/faq-import-requirements/","text":"How to import requirements ? The Import function allows you to upload requirements into a selected project. The imported file must be in .xls or .xlsx format. Different rules must be respected and are detailed below. Importing an excel file Prerequisite A project of the tree structure in Requirement workspace is selected. Being in the Requirement workspace. Click on the button [Import/Export]. A drop down menu opens up: Click on the link [Import] in the drop down menu. A pop-up \u00ab Import in excel format \u00bb opens : Select the project in which the import is uploaded. Click on the button [Choose File] to choose the file to import Click on the [Import] button. A confirmation pop-up opens. Click on [Ok]. When the file upload ends, a pop-up opens up detailing : Total number of requirement in the excel file, Total number of successfully uploaded requirement, Number of non uploaded requirement. Click on [Ok] and refresh the page. Imported requirements are displayed in the selected project tree structure Focus It is possible to import the links between requirements and test cases. Click on the button [Import], select [Import links] and then follow these steps. Model of import file The import file must be in .xls or .xlsx format to be readable by Squash. It does also respect different rules listed below : Only the first tab will be uploaded, the other tabs will be ignored Uploaded data are materialized by a tag/value couple The tags are always placed in first line (top-head of the table), no matter the order Values are placed in lines below the first tag's line The upload is made by line, no matter the order of lines Field's names or the first column are not case sensitive Empty lines are not interpreted Cells do not be merged The excel file has a table which contains the following described columns: TAG Definition PATH Path to follow to find the requirement in the tree structure. ID Automatically filled in by the system VERSION Creating the requirement, the version number is always 1. LABEL Obligatory REFERENCE Optional DESCRIPTION Optional CRITICALITY Optional value to choose in the following list (by default \u00ab undefined \u00bb): 1- Critical ; 2- Major ; 3- Minor ; 4- Undefined CATEGORY Optional value to choose in the following list (by default \u00ab undefined \u00bb): Functional ; Non functional ; Business ; Use case ; Test requirement ; Undefined STATE Optional ( by default \u00ab work in progress \u00bb) Value to choose in the following list : Obsolete ; Approved ; Under review ; Work in progress CREATED_ON Requirement creation date CREATED_BY Login of the requirement creator user","title":"How to import requirements ?"},{"location":"faq/faq-import-requirements/#how-to-import-requirements","text":"The Import function allows you to upload requirements into a selected project. The imported file must be in .xls or .xlsx format. Different rules must be respected and are detailed below.","title":"How to import requirements ?"},{"location":"faq/faq-import-requirements/#importing-an-excel-file","text":"Prerequisite A project of the tree structure in Requirement workspace is selected. Being in the Requirement workspace. Click on the button [Import/Export]. A drop down menu opens up: Click on the link [Import] in the drop down menu. A pop-up \u00ab Import in excel format \u00bb opens : Select the project in which the import is uploaded. Click on the button [Choose File] to choose the file to import Click on the [Import] button. A confirmation pop-up opens. Click on [Ok]. When the file upload ends, a pop-up opens up detailing : Total number of requirement in the excel file, Total number of successfully uploaded requirement, Number of non uploaded requirement. Click on [Ok] and refresh the page. Imported requirements are displayed in the selected project tree structure Focus It is possible to import the links between requirements and test cases. Click on the button [Import], select [Import links] and then follow these steps.","title":"Importing an excel file"},{"location":"faq/faq-import-requirements/#model-of-import-file","text":"The import file must be in .xls or .xlsx format to be readable by Squash. It does also respect different rules listed below : Only the first tab will be uploaded, the other tabs will be ignored Uploaded data are materialized by a tag/value couple The tags are always placed in first line (top-head of the table), no matter the order Values are placed in lines below the first tag's line The upload is made by line, no matter the order of lines Field's names or the first column are not case sensitive Empty lines are not interpreted Cells do not be merged The excel file has a table which contains the following described columns: TAG Definition PATH Path to follow to find the requirement in the tree structure. ID Automatically filled in by the system VERSION Creating the requirement, the version number is always 1. LABEL Obligatory REFERENCE Optional DESCRIPTION Optional CRITICALITY Optional value to choose in the following list (by default \u00ab undefined \u00bb): 1- Critical ; 2- Major ; 3- Minor ; 4- Undefined CATEGORY Optional value to choose in the following list (by default \u00ab undefined \u00bb): Functional ; Non functional ; Business ; Use case ; Test requirement ; Undefined STATE Optional ( by default \u00ab work in progress \u00bb) Value to choose in the following list : Obsolete ; Approved ; Under review ; Work in progress CREATED_ON Requirement creation date CREATED_BY Login of the requirement creator user","title":"Model of import file"},{"location":"installation/","text":"Installation Guide This section is about Installation and Exploitation information.","title":"Installation Guide"},{"location":"installation/#installation-guide","text":"This section is about Installation and Exploitation information.","title":"Installation Guide"},{"location":"installation/attachments-repo/","text":"Attachments repository From Squash TM 1.18.0 release, it was made possible to store attachments outside the database directly in a file system. By default, the storage of attachments remains within the database because this is the simplest solution, and because it fits standard data quantities perfectly. For a new installation of Squash TM, only a configuration is necessary for you to benefit from this new means of storage. On an existing instance, you will first need to extract the existing attachments before you change the configuration. Warning Changing from a storage in a database to a file storage does have consequences, more specifically concerning data back-ups. The system administrator therefore absolutely needs to make the necessary modifications as follows: - make sure you think of an attachment back-up system which works simultaneously with the database system - make sure you have enough space to store the attachments and follow the evolution of this space - give the right to read and write to the user launching the Squash TM process on the repository you picked to store the attachments Configuration Warning If you already have existing attachements in a database, you absolutely need to extract them BEFORE you change the Squash TM configuration. ~SQUASH is the deployment repository of Squash TM Stop Squash and edit the file squash.tm.cfg.properties within the ~SQUASH/conf repository Add the squashtm.feature.file.repository = true attribute Optionally, add the attribute squash.path.file.repository= . This step is necessary after the database attachments were extracted. By default, if this attribute is absent, Squash TM will store the attachments within the ~SQUASH/attachments repository Make all necessary system modifications, especially of the chosen path is not the default path (this targets more specifically the attribution of rights to the user, who needs to be allowed to write and edit the processes not only from the side of Squash, but also from the side of the machine) Relaunch Squash TM Make a test from the application by downloading an existing attachment. Add a new attachment, download it, and then erase it Extracting the existing attachments If you decide to change from a database storage to a file system storage on an existing Squash TM installation, you need to migrate the attachments from your database towards the file format supported by Squash TM. A migration tool made by Henix is available at : http://repo.squashtest.org/distribution Warning Save your database BEFORE you start the migration procedure, so as to still be able to restore it in case you should have a problem Process on Windows Stop Squash TM Unzip the tool. If you wish to keep the default attachement storing path, you may directly unzip the tool in the Squash TM root repository and not change REPO_PATH. Your attachements will be directly put in your file (~SQUASH/squash-tm-extract-attachment-tool/attachments) Edit the file extract-attachment.bat Find the following lines: shell set DB_TYPE=h2 set DB_URL=jdbc:h2:./data/squash-tm set DB_USERNAME=sa set DB_PASSWORD=sa Edit with the needed values to access the database of your Squash TM instance. They should all be similar to the ones in your Squash TM startup script. Find the following line: REPO_PATH=./attachments Edit path if necessary. The attachments will be extracted in this repository. Run the file extract-attachment.bat The migration starts automatically. It involves three steps: the extraction of the attachments the verification of the extracted files the deletion of the attachements in the database Once the migration is finished, please configure Squash TM as indicated in section 6.1 Process on Linux Stop Squash TM Unzip the tool. If you wish to keep the default attachement storing path, you may directly unzip the tool in the Squash TM root repository and not change REPO_PATH. Your attachements will be directly put in your file (~SQUASH/attachments) Edit the file extract-attachment.sh Find the following lines: sql DB_TYPE=h2 DB_URL=jdbc:h2:../data/squash-tm DB_USERNAME=sa DB_PASSWORD=sa Edit with the needeed values to access the database of your Squash TM instance. They should all be similar to the ones in your Squash TM startup script. Find the following line: REPO_PATH=./attachments Edit path if necessary. The attachments will be extracted in this repository. Run the file extract-attachment.sh The migration starts automatically. It involves three steps: the extraction of the attachments the verification of the extracted files the deletion of the attachements in the database Once the migration is finished, please configure Squash TM as indicated in section 6.1 Post-migration Depending on the RDBMS, you might need to maintain the database to free the disk space the attachments take, even if the migrator deleted them by means of SQL requests. For instance, vacuumlo or vaccumdb for the PostgreSQL database, or to execute an \u00aboptimize table\u00bb from the Table Inspector for the MySQL database. Please see the documentation regarding your RDBMS for more information.","title":"Attachments repository"},{"location":"installation/attachments-repo/#attachments-repository","text":"From Squash TM 1.18.0 release, it was made possible to store attachments outside the database directly in a file system. By default, the storage of attachments remains within the database because this is the simplest solution, and because it fits standard data quantities perfectly. For a new installation of Squash TM, only a configuration is necessary for you to benefit from this new means of storage. On an existing instance, you will first need to extract the existing attachments before you change the configuration. Warning Changing from a storage in a database to a file storage does have consequences, more specifically concerning data back-ups. The system administrator therefore absolutely needs to make the necessary modifications as follows: - make sure you think of an attachment back-up system which works simultaneously with the database system - make sure you have enough space to store the attachments and follow the evolution of this space - give the right to read and write to the user launching the Squash TM process on the repository you picked to store the attachments","title":"Attachments repository"},{"location":"installation/attachments-repo/#configuration","text":"Warning If you already have existing attachements in a database, you absolutely need to extract them BEFORE you change the Squash TM configuration. ~SQUASH is the deployment repository of Squash TM Stop Squash and edit the file squash.tm.cfg.properties within the ~SQUASH/conf repository Add the squashtm.feature.file.repository = true attribute Optionally, add the attribute squash.path.file.repository= . This step is necessary after the database attachments were extracted. By default, if this attribute is absent, Squash TM will store the attachments within the ~SQUASH/attachments repository Make all necessary system modifications, especially of the chosen path is not the default path (this targets more specifically the attribution of rights to the user, who needs to be allowed to write and edit the processes not only from the side of Squash, but also from the side of the machine) Relaunch Squash TM Make a test from the application by downloading an existing attachment. Add a new attachment, download it, and then erase it","title":"Configuration"},{"location":"installation/attachments-repo/#extracting-the-existing-attachments","text":"If you decide to change from a database storage to a file system storage on an existing Squash TM installation, you need to migrate the attachments from your database towards the file format supported by Squash TM. A migration tool made by Henix is available at : http://repo.squashtest.org/distribution Warning Save your database BEFORE you start the migration procedure, so as to still be able to restore it in case you should have a problem","title":"Extracting the existing attachments"},{"location":"installation/attachments-repo/#process-on-windows","text":"Stop Squash TM Unzip the tool. If you wish to keep the default attachement storing path, you may directly unzip the tool in the Squash TM root repository and not change REPO_PATH. Your attachements will be directly put in your file (~SQUASH/squash-tm-extract-attachment-tool/attachments) Edit the file extract-attachment.bat Find the following lines: shell set DB_TYPE=h2 set DB_URL=jdbc:h2:./data/squash-tm set DB_USERNAME=sa set DB_PASSWORD=sa Edit with the needed values to access the database of your Squash TM instance. They should all be similar to the ones in your Squash TM startup script. Find the following line: REPO_PATH=./attachments Edit path if necessary. The attachments will be extracted in this repository. Run the file extract-attachment.bat The migration starts automatically. It involves three steps: the extraction of the attachments the verification of the extracted files the deletion of the attachements in the database Once the migration is finished, please configure Squash TM as indicated in section 6.1","title":"Process on Windows"},{"location":"installation/attachments-repo/#process-on-linux","text":"Stop Squash TM Unzip the tool. If you wish to keep the default attachement storing path, you may directly unzip the tool in the Squash TM root repository and not change REPO_PATH. Your attachements will be directly put in your file (~SQUASH/attachments) Edit the file extract-attachment.sh Find the following lines: sql DB_TYPE=h2 DB_URL=jdbc:h2:../data/squash-tm DB_USERNAME=sa DB_PASSWORD=sa Edit with the needeed values to access the database of your Squash TM instance. They should all be similar to the ones in your Squash TM startup script. Find the following line: REPO_PATH=./attachments Edit path if necessary. The attachments will be extracted in this repository. Run the file extract-attachment.sh The migration starts automatically. It involves three steps: the extraction of the attachments the verification of the extracted files the deletion of the attachements in the database Once the migration is finished, please configure Squash TM as indicated in section 6.1","title":"Process on Linux"},{"location":"installation/attachments-repo/#post-migration","text":"Depending on the RDBMS, you might need to maintain the database to free the disk space the attachments take, even if the migrator deleted them by means of SQL requests. For instance, vacuumlo or vaccumdb for the PostgreSQL database, or to execute an \u00aboptimize table\u00bb from the Table Inspector for the MySQL database. Please see the documentation regarding your RDBMS for more information.","title":"Post-migration"},{"location":"installation/requirements-prerequisites/","text":"System requirements and prerequisites Setups and prerequisites are listed for informational purposes only. System Requirements CPU RAM Hard drive OS Browser Required Mono core 1 Go dedicated 120 Mo Windows, Mac, Linux IE 11+, Firefox ESR, Chrome Recommended Dual core 2 Go dedicated 5 Go Linux Firefox or Chrome Some functionalities (and especially data import or data export) may require that 500 Mo are kept free and available for the database server. Prerequisites Operating system : Debian Centos/Redhat Other Linux Windows Recommended version Debian Buster (10.6+) Versions 7 + - Windows Server 2012 Launch as service Yes (Script provided) Yes (Script provided) To be set by the administrator Yes (Script provided) Automated installer Yes with .deb or apt Yes with .rpm or yum Depending on OS No Automated update Yes (Binary and Database) Yes (Binary only) Depending on OS No Virtual Machine: JVM 1.8 ( it is IMPERATIVE to use Java 8 or Java 11 with Squash 1.21.0+ ) Application Server: none (Squash TM embeds its own application server: Tomcat in Squash TM 1.13+) Database: none or Mariabd 10.5+, PostGres 9.1+. Please note that Squash-TM comes with an embedded H2 database for testing purpose only. H2 should not be used as production database. Recommended components: Debian Buster, Mariadb 10.5 From Squash TM 1.21, MySQL is no longer supported. For the previous Squash versions, the MySQL supported versions are of between 5.7.17 to 5.7.x. The prior and following versions are not supported anymore. Whatever the version, the @@sql_mode must NOT contain the tag ONLY_FULL_GROUP_BY . For MySQL versions 5.7 and over, the @@sql_mode variable must contain the tags: NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES This variable has to be set in the configuration file my.ini , in the section [mysqld] . Mantis 2.x+ or Jira 8+ Apache (web front end) Regarding MariaDB: We recommend strongly 10.2+. MariaDB 10.1 is not compatible with Squash TM. @@sql_mode should NOT contain the tag ONLY_FULL_GROUP_BY. @@sql_mode variable must contain the tags: NO_ENGINE_SUBSTITUTION , STRICT_TRANS_TABLES This varaible has to be set in the configuration file my.ini, in the section [mysqld]. Regarding MySQL : We recommend you to migrate from MySQL to MariaDB. To do so, please refer to MariaDB documentation. Regarding PostgreSQL: Squash TM uses functions from the extensions plpgsql and, for versions 1.20+, uuid-ossp. Make sure this extensions are available in your instance of PostgreSQL. The following query : SELECT * FROM pg_available_extensions ; will help you to know if these extensions are available on your PostgreSQL instance. If not, you first have to make it available before installing Squash-TM. In Unix configurations, the ulimit for maximum open files has to bet set high enough (60 000). Squash will otherwise not be able to work properly, and the log file will specify \"Too many files opened\".","title":"System requirements and prerequisites"},{"location":"installation/requirements-prerequisites/#system-requirements-and-prerequisites","text":"Setups and prerequisites are listed for informational purposes only.","title":"System requirements and prerequisites"},{"location":"installation/requirements-prerequisites/#system-requirements","text":"CPU RAM Hard drive OS Browser Required Mono core 1 Go dedicated 120 Mo Windows, Mac, Linux IE 11+, Firefox ESR, Chrome Recommended Dual core 2 Go dedicated 5 Go Linux Firefox or Chrome Some functionalities (and especially data import or data export) may require that 500 Mo are kept free and available for the database server.","title":"System Requirements"},{"location":"installation/requirements-prerequisites/#prerequisites","text":"Operating system : Debian Centos/Redhat Other Linux Windows Recommended version Debian Buster (10.6+) Versions 7 + - Windows Server 2012 Launch as service Yes (Script provided) Yes (Script provided) To be set by the administrator Yes (Script provided) Automated installer Yes with .deb or apt Yes with .rpm or yum Depending on OS No Automated update Yes (Binary and Database) Yes (Binary only) Depending on OS No Virtual Machine: JVM 1.8 ( it is IMPERATIVE to use Java 8 or Java 11 with Squash 1.21.0+ ) Application Server: none (Squash TM embeds its own application server: Tomcat in Squash TM 1.13+) Database: none or Mariabd 10.5+, PostGres 9.1+. Please note that Squash-TM comes with an embedded H2 database for testing purpose only. H2 should not be used as production database. Recommended components: Debian Buster, Mariadb 10.5 From Squash TM 1.21, MySQL is no longer supported. For the previous Squash versions, the MySQL supported versions are of between 5.7.17 to 5.7.x. The prior and following versions are not supported anymore. Whatever the version, the @@sql_mode must NOT contain the tag ONLY_FULL_GROUP_BY . For MySQL versions 5.7 and over, the @@sql_mode variable must contain the tags: NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES This variable has to be set in the configuration file my.ini , in the section [mysqld] . Mantis 2.x+ or Jira 8+ Apache (web front end) Regarding MariaDB: We recommend strongly 10.2+. MariaDB 10.1 is not compatible with Squash TM. @@sql_mode should NOT contain the tag ONLY_FULL_GROUP_BY. @@sql_mode variable must contain the tags: NO_ENGINE_SUBSTITUTION , STRICT_TRANS_TABLES This varaible has to be set in the configuration file my.ini, in the section [mysqld]. Regarding MySQL : We recommend you to migrate from MySQL to MariaDB. To do so, please refer to MariaDB documentation. Regarding PostgreSQL: Squash TM uses functions from the extensions plpgsql and, for versions 1.20+, uuid-ossp. Make sure this extensions are available in your instance of PostgreSQL. The following query : SELECT * FROM pg_available_extensions ; will help you to know if these extensions are available on your PostgreSQL instance. If not, you first have to make it available before installing Squash-TM. In Unix configurations, the ulimit for maximum open files has to bet set high enough (60 000). Squash will otherwise not be able to work properly, and the log file will specify \"Too many files opened\".","title":"Prerequisites"},{"location":"installation/running-stopping-squash-tm/","text":"Running and stopping Squash TM Running Squash TM with the Windows package Click on the shortcut icon to launch Squash TM. When a window opens, wait for the application to start. After loading, Squash TM opens in a new browser page. Use the administrator account (admin/admin) to log in. You can now access the administration interface to integrate new users and projects. To stop Squash TM : In the command consol, type the command \"stop 0\" and confirm. Running Squash TM with the universal package In the 'bin' folder, type the command 'startup.bat' (Windows) or 'startup.sh' (Linux/Mac). Open a browser and go to Squash TM using the URL: http://:8080/squash/. Use the administrator account (admin/admin) to log in. You can now access the administration interface to create new users and projects. To stop Squash TM : In the windows of Squash launch, type the command \"stop 0\" then confirm. For Debian For Debian systems, the file\" bin/squash_debian_readme.txt\" explains how to install/use Squash as a Debian service. The file \"bin/squash_debian_readme.txt\" explains how to stop Squash when it was launched as a Debian service.","title":"Running and stopping Squash TM"},{"location":"installation/running-stopping-squash-tm/#running-and-stopping-squash-tm","text":"","title":"Running and stopping Squash TM"},{"location":"installation/running-stopping-squash-tm/#running-squash-tm-with-the-windows-package","text":"Click on the shortcut icon to launch Squash TM. When a window opens, wait for the application to start. After loading, Squash TM opens in a new browser page. Use the administrator account (admin/admin) to log in. You can now access the administration interface to integrate new users and projects. To stop Squash TM : In the command consol, type the command \"stop 0\" and confirm.","title":"Running Squash TM with the Windows package"},{"location":"installation/running-stopping-squash-tm/#running-squash-tm-with-the-universal-package","text":"In the 'bin' folder, type the command 'startup.bat' (Windows) or 'startup.sh' (Linux/Mac). Open a browser and go to Squash TM using the URL: http://:8080/squash/. Use the administrator account (admin/admin) to log in. You can now access the administration interface to create new users and projects. To stop Squash TM : In the windows of Squash launch, type the command \"stop 0\" then confirm. For Debian For Debian systems, the file\" bin/squash_debian_readme.txt\" explains how to install/use Squash as a Debian service. The file \"bin/squash_debian_readme.txt\" explains how to stop Squash when it was launched as a Debian service.","title":"Running Squash TM with the universal package"},{"location":"installation/squash-tm-installation/","text":"Installing Squash TM This article explains how to install and run Squash TM. The application is packaged in several forms : A Windows executable, installer included (.jar) A universal package compatible with Windows, Mac and Linux (downloadable in .zip or tar.gz) A debian package (deprecated from 1.22 and not supported from Squash TM 2.0) A redhat package (deprecated from 1.22 and not supported from Squash TM 2.0) Please refer to minimal necessary configuration and prerequisite .","title":"Installing Squash TM"},{"location":"installation/squash-tm-installation/#installing-squash-tm","text":"This article explains how to install and run Squash TM. The application is packaged in several forms : A Windows executable, installer included (.jar) A universal package compatible with Windows, Mac and Linux (downloadable in .zip or tar.gz) A debian package (deprecated from 1.22 and not supported from Squash TM 2.0) A redhat package (deprecated from 1.22 and not supported from Squash TM 2.0) Please refer to minimal necessary configuration and prerequisite .","title":"Installing Squash TM"},{"location":"installation/squash-tm-installation/Squash-tm-1.13-install/","text":"Squash TM 1.13+ installation From Squash TM 1.13 and onwards, the embedded web server with Squash TM is Tomcat (in lieu of Jetty). The Squash directory has been modified as follows : Squash plug-ins are now to be installed in the plugins folder, formerly bundles (see 2.07 - Install and configure a Squash TM plug-in) Squash configuration are now available in the squashtm.cfg.properties file (previously several files in the conf/services folder) The Squash upgrade procedure has been modified (see 2.06 - Upgrade Squash TM) Squash can now be deployed in an existing Tomcat 8 server (see 2.08-Deploy Squash TM in Tomcat)","title":"Squash TM 1.13+ installation"},{"location":"installation/squash-tm-installation/Squash-tm-1.13-install/#squash-tm-113-installation","text":"From Squash TM 1.13 and onwards, the embedded web server with Squash TM is Tomcat (in lieu of Jetty). The Squash directory has been modified as follows : Squash plug-ins are now to be installed in the plugins folder, formerly bundles (see 2.07 - Install and configure a Squash TM plug-in) Squash configuration are now available in the squashtm.cfg.properties file (previously several files in the conf/services folder) The Squash upgrade procedure has been modified (see 2.06 - Upgrade Squash TM) Squash can now be deployed in an existing Tomcat 8 server (see 2.08-Deploy Squash TM in Tomcat)","title":"Squash TM 1.13+ installation"},{"location":"installation/squash-tm-installation/windows-installation/","text":"Installation with Windows Java support From Squash TM 1.17, it is IMPERATIVE to use Java 8, Java 7 is not supported anymore. Installing Squash TM as a Windows service with universal package (.zip) Unzip the archive .zip and move the contents to the chosen location (i.e c:\\ ). The Windows process associated to Squash TM must have reading and writing rights on Squash install location. Populate the database with SQL scripts located in: c:\\ \\Squash-TM\\databse-scripts Add the database connection information in startup.bat (to install a new database, see 2.05 - Install another database (recommended)): DB_URL=\"jdbc:mysql://localhost:3306/squashtm\" or \"jdbc:postgresql://localhost:5432/squashtm\" DB_TYPE=\"mysql\" or \"postgresql\" DB_USERNAME=\"squash-tm\" DB_PASSWORD=\"initial_pw\" Install the service with: c:\\Squash-TM\\bin\\squash-tm.exe install Warning Please note that the Windows installer (.jar) is for testing purpose only. It should not be used for production.","title":"Installation with Windows"},{"location":"installation/squash-tm-installation/windows-installation/#installation-with-windows","text":"Java support From Squash TM 1.17, it is IMPERATIVE to use Java 8, Java 7 is not supported anymore.","title":"Installation with Windows"},{"location":"installation/squash-tm-installation/windows-installation/#installing-squash-tm-as-a-windows-service-with-universal-package-zip","text":"Unzip the archive .zip and move the contents to the chosen location (i.e c:\\ ). The Windows process associated to Squash TM must have reading and writing rights on Squash install location. Populate the database with SQL scripts located in: c:\\ \\Squash-TM\\databse-scripts Add the database connection information in startup.bat (to install a new database, see 2.05 - Install another database (recommended)): DB_URL=\"jdbc:mysql://localhost:3306/squashtm\" or \"jdbc:postgresql://localhost:5432/squashtm\" DB_TYPE=\"mysql\" or \"postgresql\" DB_USERNAME=\"squash-tm\" DB_PASSWORD=\"initial_pw\" Install the service with: c:\\Squash-TM\\bin\\squash-tm.exe install Warning Please note that the Windows installer (.jar) is for testing purpose only. It should not be used for production.","title":"Installing Squash TM as a Windows service with universal package (.zip)"},{"location":"user/","text":"User's Guide This section is about the use of Squash TM.","title":"User's Guide"},{"location":"user/#users-guide","text":"This section is about the use of Squash TM.","title":"User's Guide"},{"location":"user/business-terminology/","text":"Reader's guide: business terminology Terms Business definitions Requirement Extracted from the design documentation and business administration rules they come from, the requirements describe the application expected behaviors. Test case Functional path to execute in order to verify the conformity of functions.The test case is defined by a data set to determine, a script to execute and expected detailed Step Phase of the functional path set up in a script. Each step verifies an expected result Campaign Set up to verify a definite number of functions, a test campaign has different phases: definition of the test aims (choice of test cases and data set related to it) establishing iteration numbers and their content according to the test aims test running identification, analysis and tracking of the defects conclusion about the tested functions' behaviour Iteration Test cases selection executed in line in a campaign Test plan The plan unveils the test strategy by describing the test in the whole: place in the process, test environment, kind of test, Execution It is the running phase of the test cases. It is also the phase of identification, analysis and following of defect Test suite A kind of organization and group of test cases. Functionality that permits to execute the test cases in line","title":"Reader's guide: business terminology"},{"location":"user/business-terminology/#readers-guide-business-terminology","text":"Terms Business definitions Requirement Extracted from the design documentation and business administration rules they come from, the requirements describe the application expected behaviors. Test case Functional path to execute in order to verify the conformity of functions.The test case is defined by a data set to determine, a script to execute and expected detailed Step Phase of the functional path set up in a script. Each step verifies an expected result Campaign Set up to verify a definite number of functions, a test campaign has different phases: definition of the test aims (choice of test cases and data set related to it) establishing iteration numbers and their content according to the test aims test running identification, analysis and tracking of the defects conclusion about the tested functions' behaviour Iteration Test cases selection executed in line in a campaign Test plan The plan unveils the test strategy by describing the test in the whole: place in the process, test environment, kind of test, Execution It is the running phase of the test cases. It is also the phase of identification, analysis and following of defect Test suite A kind of organization and group of test cases. Functionality that permits to execute the test cases in line","title":"Reader's guide: business terminology"}]}